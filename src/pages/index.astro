---
import Layout from '../layouts/Layout.astro';
import ProjectCard from '../components/ProjectCard.astro';
import { getCollection } from 'astro:content';
import type { Props as ProjectProps } from '../components/ProjectCard.astro';

// Dummy data for projects
const commercialProjects: ProjectProps[] = [
	{ name: 'Major Banking System', status: 'active', technologies: ['React', 'Java'], duration: '2 Years', url: 'https://github.com' },
	{ name: 'Customer Management Platform', status: 'finished', technologies: ['Vue', '.NET'], duration: '18 Months', url: 'https://github.com' },
];
const academicProjects: ProjectProps[] = [
	{ name: 'Medical Data Analysis', status: 'suspended', technologies: ['Python', 'Astro'], duration: '6 Months', url: 'https://github.com' },
	{ name: 'E-Learning Platform', status: 'active', technologies: ['Svelte', 'Go'], duration: 'Ongoing', url: 'https://github.com' },
];

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---
<Layout title="Komeyl Kalhorinia | Home" description="KomeylBlog - Portfolio and blog of Komeyl Kalhorinia.">

	<div class="content-wrapper">
		<section class="project-section">
			<h2>Commercial Projects</h2>
		</section>
	</div>

	<div class="project-slider">
		{commercialProjects.map(project => (
			<ProjectCard {...project} />
		))}
	</div>

	<div class="content-wrapper">
		<section class="project-section">
			<h2>Personal & Academic Projects</h2>
		</section>
	</div>
	
	<div class="project-slider">
		{academicProjects.map(project => (
			<ProjectCard {...project} />
		))}
	</div>

	<div class="content-wrapper">
		<section class="blog-section">
			<h2>Recent Posts</h2>
			<ul class="post-list">
				{posts.map((post) => (
					<li class="post-item">
						<a href={`/blog/${post.slug}/`}>
							<h3 class="post-title">{post.data.title}</h3>
							<p class="post-description">{post.data.description}</p>
							<time datetime={post.data.pubDate.toISOString()}>
								{new Date(post.data.pubDate).toLocaleDateString('en-us', {
									year: 'numeric',
									month: 'short',
									day: 'numeric',
								})}
							</time>
						</a>
					</li>
				))}
			</ul>
		</section>
	</div>
</Layout>

<style>
	/* This wrapper constrains the width of standard content */
	.content-wrapper {
		width: 100%;
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 calc(var(--spacing-unit) * 2);
		box-sizing: border-box;
	}

	.project-section, .blog-section {
		margin-bottom: calc(var(--spacing-unit) * 3);
	}
	/* Remove bottom margin from sections that are followed by a slider */
	.project-section {
		margin-bottom: calc(var(--spacing-unit) * 3);
	}
	.blog-section {
		margin-top: calc(var(--spacing-unit) * 8);
	}
	
	.project-section h2, .blog-section h2 {
		font-size: 2rem;
		font-weight: 700;
		padding-bottom: calc(var(--spacing-unit) * 1.5);
		border-bottom: 1px solid var(--glass-border);
		display: inline-block;
		margin-top: calc(var(--spacing-unit) * 5);
	}
	.project-section:first-of-type h2 {
		margin-top: 0;
	}
	
	.project-slider {
		width: 100%;
		display: grid;
		grid-auto-flow: column;
		grid-auto-columns: 85%;
		gap: calc(var(--spacing-unit) * 2);
		overflow-x: auto;
		scroll-snap-type: x mandatory;

		/* Padding on the sides creates the necessary space */
		padding: calc(var(--spacing-unit) * 2) calc(var(--spacing-unit) * 2);
		
		/* Remove the main padding from the left of the slider on desktop */
		@media (min-width: 1200px) {
			padding-left: calc((100% - 1200px) / 2 + var(--spacing-unit) * 2);
			padding-right: calc((100% - 1200px) / 2 + var(--spacing-unit) * 2);
		}

		box-sizing: border-box;
		scrollbar-width: none;
	}
	.project-slider::-webkit-scrollbar {
  		display: none;
	}
	.project-slider > :global(.project-card) {
		scroll-snap-align: start;
	}

	@media (min-width: 768px) {
		.project-slider {
			grid-auto-columns: 45%;
		}
	}
    @media (min-width: 1024px) {
		.project-slider {
			grid-auto-columns: 32%;
		}
	}

	.post-list {
		list-style: none;
		padding: 0;
		display: grid;
		gap: calc(var(--spacing-unit) * 2);
	}
	.post-item a {
		background-color: var(--glass-background);
		backdrop-filter: blur(20px);
		-webkit-backdrop-filter: blur(20px);
		border: 1px solid var(--glass-border);
		border-radius: var(--border-radius-large);
		display: block;
		padding: calc(var(--spacing-unit) * 3);
		text-decoration: none;
		color: var(--color-text);
		transition: transform 0.3s ease, box-shadow 0.3s ease;
	}
	.post-item a:hover {
		transform: translateY(-5px);
		box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
	}
	.post-title {
		font-size: 1.5rem;
        font-weight: 600;
		margin: 0 0 var(--spacing-unit) 0;
		color: var(--color-text);
		transition: color 0.2s ease;
	}
	.post-item a:hover .post-title {
		color: var(--color-primary);
	}
	.post-description {
		margin: 0 0 calc(var(--spacing-unit) * 2) 0;
		color: var(--color-text-muted);
		line-height: 1.6;
	}
	time {
		font-size: 0.9rem;
		color: var(--color-text-muted);
	}
</style>