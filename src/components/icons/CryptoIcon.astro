---
import * as simpleIcons from 'simple-icons/icons';

interface IconData {
  title: string;
  svg: string;
}

interface Props { 
  name: string; 
}
const { name } = Astro.props;

const tronIconSvg = `<svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>TRON</title><path d="M12.154 24a.55.55 0 01-.54-.645l.904-3.83-2.072 2.162a.54.54 0 01-.765 0l-2.9-2.9a.54.54 0 010-.765l9.92-9.92a.54.54 0 01.765 0l2.9 2.9a.54.54 0 010 .765l-2.161 2.072 3.83.904a.55.55 0 01.096 1.047l-8.981 2.154a.53.53 0 01-.06.002zm-.63-6.525-4.42-4.42 6.525-6.525-2.105 10.945zM3.454.212a.54.54 0 00-.765 0L.07 2.83a.54.54 0 000 .765l9.92 9.92a.54.54 0 00.765 0l2.9-2.9a.54.54 0 000-.765L3.454.212zm-.63 3.45L7.24 7.24l-3.57 3.57L.21 7.24a.54.54 0 010-.765L2.825.857z"/></svg>`;

// Our final, reliable icon map
const ICONS: Record<string, IconData> = {
    'btc': simpleIcons.siBitcoin,
    'eth': simpleIcons.siEthereum,
    'usdt': simpleIcons.siTether, 
    'ton': simpleIcons.siTon,
    'bnb': simpleIcons.siBinance,
    'tron': { title: 'TRON', svg: tronIconSvg }, 
};

const iconData = ICONS[name.toLowerCase()];
---
{iconData ? (
    <div class="icon-wrapper" title={iconData.title}>
        <Fragment set:html={iconData.svg} />
    </div>
) : (
    <div class="icon-wrapper text-fallback" title={`Icon for ${name} not found`}>
        {name.slice(0, 1).toUpperCase()}
    </div>
)}