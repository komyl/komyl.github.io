---
export interface Props {
    name: string;
    status: 'active' | 'suspended' | 'finished';
    technologies?: string[];
    duration?: string;
}
const { name, status, technologies, duration } = Astro.props;
---
<div class="project-card">
    <div class="card-header">
        <h3 class="project-name">{name}</h3>
        <span class="status-text">{status}</span>
    </div>
    <div class="card-footer">
        <div class="technologies">
            {technologies && technologies.join(', ')}
        </div>
        {duration && <span class="duration">{duration}</span>}
    </div>
</div>
<style>
.project-card {
    background-color: var(--glass-background);
    backdrop-filter: blur(20px);
    border: 1px solid var(--glass-border);
    border-radius: var(--border-radius-large);
    padding: calc(var(--spacing-unit) * 3);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
}
.card-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: calc(var(--spacing-unit) * 2);
}
.project-name {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--color-text);
    margin-right: 1rem;
}
.status-text {
    font-size: 0.8rem;
    color: var(--color-text-muted);
    background: var(--glass-border);
    padding: 4px 8px;
    border-radius: 99px;
    text-transform: capitalize;
    flex-shrink: 0;
}
.card-footer {
    border-top: 1px solid var(--glass-border);
    padding-top: calc(var(--spacing-unit) * 2);
    margin-top: auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.9rem;
    color: var(--color-text-muted);
}
.technologies {
    flex-grow: 1;
    margin-right: 1rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
</style>